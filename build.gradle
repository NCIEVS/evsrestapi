buildscript {
    ext {
		springBootVersion = '2.2.4.RELEASE'
	}
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

repositories {
    mavenLocal()
    jcenter()
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
    mavenCentral()
}


/*
 * Extra Properties
 */
ext {
     /*
     * Other third-party software versions
     */
     swaggerversion = "2.9.2"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
/*
 * The dependency management plugin remains a transitive dependency of spring-boot-gradle-plugin
 * so thereâ€™s no need for it to be listed as a classpath dependency in the buildscript configuration.
 */
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'maven-publish'


/* Version info */
group = "gov.nih.nci.evs.api"
version = "1.3.0.RELEASE"

sourceCompatibility = 1.8
targetCompatibility = 1.8

springBoot {
    // generate file META-INF/build-info.properties during the build
    buildInfo()          
}

dependencies {
   
    compile 'org.springframework.boot:spring-boot-starter-web'       
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.boot:spring-boot-starter-actuator'  
    compile 'org.springframework.boot:spring-boot-starter-cache'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-io:commons-io:2.6'
    compile "io.springfox:springfox-swagger2:$swaggerversion" 
    compile "io.springfox:springfox-swagger-ui:$swaggerversion"
    compile 'org.springframework.boot:spring-boot-properties-migrator'
    compile 'org.springframework:spring-aop'
    compile 'org.aspectj:aspectjweaver:1.9.2'
    compile 'org.apache.commons:commons-text:1.8'
    compile 'javax.cache:cache-api:1.1.1'
    compile 'org.ehcache:ehcache:3.8.1'
    compile 'org.springframework.data:spring-data-elasticsearch:3.2.0.RELEASE'
    compile 'commons-cli:commons-cli:1.4'
    compile 'cglib:cglib:2.2.2'

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    /*
     * Test Dependencies
    */
    testCompile 'org.springframework.boot:spring-boot-starter-test'

}

test {
    /*
     * Configure gradle to show standard out and standard error
     * of the test JVM(s) on the console
     */
    testLogging.showStandardStreams = true
}

task zipFile(type: Zip) {
    def zipFileRootDirectory = "${project.name}-${project.version}"

    from('src/main/bin') {
        fileMode = 0755
        into "$zipFileRootDirectory/bin"
    }
    from("$buildDir/main/bin") {
        fileMode = 0755
        include '**/createDirectoriesForWorkspace.pl'
        into "$zipFileRootDirectory/bin"
    }
    from('src/main/config') {
        into "${baseName}-${project.version}/config"
        into "$zipFileRootDirectory/config"
    }
    from("$buildDir/main/config") {
        include '**/createDirectories.properties'
        into "$zipFileRootDirectory/config"
    }
    from("$buildDir/libs") {
        include '*.*'
        into "$zipFileRootDirectory/lib"
    }
    rename { String fileName ->
        fileName.replace("-${project.version}", "")
    }
}

// NOTE: this causes ElasticLoadServiceImpl to launch when run via -jar
bootJar {
    manifest {
    	attributes 'Start-Class': 'gov.nih.nci.evs.api.service.ElasticLoadServiceImpl'
    }
}

zipFile.dependsOn = [ bootWar, bootJar ]
build.dependsOn = [ test, bootWar, bootJar, zipFile ]
install.dependsOn = [ bootWar, bootJar, zipFile ]


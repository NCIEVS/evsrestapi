#
# Spring Properties
#
spring:
    #
    # Application Properties
    #
    application:
        name: nci-evs-api
    profiles:
      include: thesaurus

    #
    # JSON Formatting Properties
    #
    jackson:
        serialization:
            INDENT_OUTPUT: true

    cache:
        jcache:
            config: classpath:ehcache.xml

management:
  endpoints:
    web:
      exposure:
        include: heapdump,liquibase,loggers,prometheus,threaddump,info,metrics,health

#
# TODO: need to inject this into the application and use in VersionController, currently ignored
#
info:
    app:
        name: NCI EVS API
        version: 1.1.2.RELEASE

#
# Logging Properties
#
logging:
    level:
        org.springframework: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK:WARN}
        gov.nih.nci.evs.api: ${LOGGING_LEVEL_GOV_NIH_NCI_EVS_API:INFO}
        org.springframework.data.elasticsearch.core: ${LOGGING_LEVEL_SPRING_DATA_ES:INFO}

#
# Server Properties
#
server:
    port: ${EVS_SERVER_PORT:8080}
    servlet:
       context-path: /
       session:
        persistent: false

#
# Application Properties
#
nci:
  evs:
    application:
      contextPath: ${NCI_EVS_API_PATH:/api/v1}
      generatedFilePath: ${NCI_EVS_API_GENERATED_FILE_PATH:${user.home}/apps/evsrestapi/data/}
      forceFileGeneration: ${NCI_EVS_API_FORCE_FILE_GENERATION:false}
      metricLogDirectory:  ${NCI_EVS_API_METRIC_LOG_PATH:${user.home}/apps/evsrestapi/logs/}
    bulkload:
      conceptsDir: ${NCI_EVS_BULK_LOAD_CONCEPTS_DIR:/tmp/}
      lockFile: ${NCI_EVS_BULK_LOAD_LOCK_FILE_NAME:DownloadSuccessfull.lck}
      downloadBatchSize: ${NCI_EVS_BULK_LOAD_DOWNLOAD_BATCH_SIZE:1000}
      indexBatchSize: ${NCI_EVS_BULK_LOAD_INDEX_BATCH_SIZE:1000}
    stardog:
      host: ${STARDOG_HOST:localhost}
      port: ${STARDOG_PORT:5820}
      queryUrl: ${STARDOG_MONTHLY_QUERY_URL:http://${nci.evs.stardog.host}:${nci.evs.stardog.port}/NCIT2/query}
      username: ${STARDOG_USERNAME:REPLACE_WITH_USERNAME}
      password: ${STARDOG_PASSWORD:REPLACE_WITH_PASSWORD}
      readTimeout: ${STARDOG_READ_TIMEOUT:30}
      connectTimeout: ${STARDOG_CONNECT_TIMEOUT:30}
      populateCacheCron: ${POPULATE_CACHE_CRON:0 0 1 * * *}
      forcePopulateCache: ${FORCE_POPULATE_CACHE:Y}
      waitPopulateCache: ${WAIT_POPULATE_CACHE:N}
    elasticsearch:
      server:
        host: ${ES_HOST:localhost}
        port: ${ES_PORT:9300}
        clusterName: ${ES_CLUSTER_NAME:docker-cluster}
        url: ${EVS_ELASTIC_SEARCH_SERVER_URL:http://${nci.evs.elasticsearch.server.host}:9200/concept_flat_full_nested_bylabel/concept/_search}

swagger:
   documentation:
       hostURL:  ${HOST_URL:http://localhost:8082}
       searchAPIOperation: Searches for the term or phrase using the Elastic Search mechanism
